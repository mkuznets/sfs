// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateItemsResource create items resource
//
// swagger:model CreateItemsResource
type CreateItemsResource struct {

	// authors
	// Example: The Owl
	Authors string `json:"authors,omitempty"`

	// description
	// Example: Bored owls talk about whatever happens to be on their minds
	Description string `json:"description,omitempty"`

	// feed id
	// Example: feed_2K9BWVNuo3sG4yM322fbP3mB6ls
	FeedID string `json:"feed_id,omitempty"`

	// file id
	// Example: file_2K9BWVNuo3sG4yM322fbP3mB6ls
	FileID string `json:"file_id,omitempty"`

	// link
	// Example: https://example.com
	Link string `json:"link,omitempty"`

	// published at
	// Example: 2023-01-01T01:02:03.456Z
	// Format: date-time
	PublishedAt strfmt.DateTime `json:"published_at,omitempty"`

	// title
	// Example: Bored Owls Online Radio
	Title string `json:"title,omitempty"`
}

// Validate validates this create items resource
func (m *CreateItemsResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePublishedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateItemsResource) validatePublishedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.PublishedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("published_at", "body", "date-time", m.PublishedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create items resource based on context it is used
func (m *CreateItemsResource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateItemsResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateItemsResource) UnmarshalBinary(b []byte) error {
	var res CreateItemsResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
