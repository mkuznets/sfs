// Code generated by go-swagger; DO NOT EDIT.

package episodes_page

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mkuznets.com/go/sps/api/models"
)

// GetEpisodesReader is a Reader for the GetItems structure.
type GetEpisodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEpisodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEpisodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEpisodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEpisodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEpisodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEpisodesOK creates a GetEpisodesOK with default headers values
func NewGetEpisodesOK() *GetEpisodesOK {
	return &GetEpisodesOK{}
}

/*
GetEpisodesOK describes a response with status code 200, with default header values.

OK
*/
type GetEpisodesOK struct {
	Payload *models.IDResponse
}

// IsSuccess returns true when this get episodes o k response has a 2xx status code
func (o *GetEpisodesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get episodes o k response has a 3xx status code
func (o *GetEpisodesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get episodes o k response has a 4xx status code
func (o *GetEpisodesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get episodes o k response has a 5xx status code
func (o *GetEpisodesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get episodes o k response a status code equal to that given
func (o *GetEpisodesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetEpisodesOK) Error() string {
	return fmt.Sprintf("[GET /channels/{id}/episodes][%d] getEpisodesOK  %+v", 200, o.Payload)
}

func (o *GetEpisodesOK) String() string {
	return fmt.Sprintf("[GET /channels/{id}/episodes][%d] getEpisodesOK  %+v", 200, o.Payload)
}

func (o *GetEpisodesOK) GetPayload() *models.IDResponse {
	return o.Payload
}

func (o *GetEpisodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEpisodesUnauthorized creates a GetEpisodesUnauthorized with default headers values
func NewGetEpisodesUnauthorized() *GetEpisodesUnauthorized {
	return &GetEpisodesUnauthorized{}
}

/*
GetEpisodesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEpisodesUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get episodes unauthorized response has a 2xx status code
func (o *GetEpisodesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get episodes unauthorized response has a 3xx status code
func (o *GetEpisodesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get episodes unauthorized response has a 4xx status code
func (o *GetEpisodesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get episodes unauthorized response has a 5xx status code
func (o *GetEpisodesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get episodes unauthorized response a status code equal to that given
func (o *GetEpisodesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetEpisodesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /channels/{id}/episodes][%d] getEpisodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEpisodesUnauthorized) String() string {
	return fmt.Sprintf("[GET /channels/{id}/episodes][%d] getEpisodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEpisodesUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEpisodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEpisodesNotFound creates a GetEpisodesNotFound with default headers values
func NewGetEpisodesNotFound() *GetEpisodesNotFound {
	return &GetEpisodesNotFound{}
}

/*
GetEpisodesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEpisodesNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get episodes not found response has a 2xx status code
func (o *GetEpisodesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get episodes not found response has a 3xx status code
func (o *GetEpisodesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get episodes not found response has a 4xx status code
func (o *GetEpisodesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get episodes not found response has a 5xx status code
func (o *GetEpisodesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get episodes not found response a status code equal to that given
func (o *GetEpisodesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetEpisodesNotFound) Error() string {
	return fmt.Sprintf("[GET /channels/{id}/episodes][%d] getEpisodesNotFound  %+v", 404, o.Payload)
}

func (o *GetEpisodesNotFound) String() string {
	return fmt.Sprintf("[GET /channels/{id}/episodes][%d] getEpisodesNotFound  %+v", 404, o.Payload)
}

func (o *GetEpisodesNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEpisodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEpisodesInternalServerError creates a GetEpisodesInternalServerError with default headers values
func NewGetEpisodesInternalServerError() *GetEpisodesInternalServerError {
	return &GetEpisodesInternalServerError{}
}

/*
GetEpisodesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetEpisodesInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get episodes internal server error response has a 2xx status code
func (o *GetEpisodesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get episodes internal server error response has a 3xx status code
func (o *GetEpisodesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get episodes internal server error response has a 4xx status code
func (o *GetEpisodesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get episodes internal server error response has a 5xx status code
func (o *GetEpisodesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get episodes internal server error response a status code equal to that given
func (o *GetEpisodesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetEpisodesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /channels/{id}/episodes][%d] getEpisodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEpisodesInternalServerError) String() string {
	return fmt.Sprintf("[GET /channels/{id}/episodes][%d] getEpisodesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEpisodesInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEpisodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
