// Code generated by go-swagger; DO NOT EDIT.

package episodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mkuznets.com/go/sps/api/models"
)

// GetEpisodeReader is a Reader for the GetEpisode structure.
type GetEpisodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEpisodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEpisodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEpisodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEpisodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEpisodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEpisodeOK creates a GetEpisodeOK with default headers values
func NewGetEpisodeOK() *GetEpisodeOK {
	return &GetEpisodeOK{}
}

/*
GetEpisodeOK describes a response with status code 200, with default header values.

OK
*/
type GetEpisodeOK struct {
	Payload *models.EpisodeResponse
}

// IsSuccess returns true when this get episode o k response has a 2xx status code
func (o *GetEpisodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get episode o k response has a 3xx status code
func (o *GetEpisodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get episode o k response has a 4xx status code
func (o *GetEpisodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get episode o k response has a 5xx status code
func (o *GetEpisodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get episode o k response a status code equal to that given
func (o *GetEpisodeOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetEpisodeOK) Error() string {
	return fmt.Sprintf("[GET /channels/{channelId}/episodes/{id}][%d] getEpisodeOK  %+v", 200, o.Payload)
}

func (o *GetEpisodeOK) String() string {
	return fmt.Sprintf("[GET /channels/{channelId}/episodes/{id}][%d] getEpisodeOK  %+v", 200, o.Payload)
}

func (o *GetEpisodeOK) GetPayload() *models.EpisodeResponse {
	return o.Payload
}

func (o *GetEpisodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EpisodeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEpisodeBadRequest creates a GetEpisodeBadRequest with default headers values
func NewGetEpisodeBadRequest() *GetEpisodeBadRequest {
	return &GetEpisodeBadRequest{}
}

/*
GetEpisodeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetEpisodeBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get episode bad request response has a 2xx status code
func (o *GetEpisodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get episode bad request response has a 3xx status code
func (o *GetEpisodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get episode bad request response has a 4xx status code
func (o *GetEpisodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get episode bad request response has a 5xx status code
func (o *GetEpisodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get episode bad request response a status code equal to that given
func (o *GetEpisodeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetEpisodeBadRequest) Error() string {
	return fmt.Sprintf("[GET /channels/{channelId}/episodes/{id}][%d] getEpisodeBadRequest  %+v", 400, o.Payload)
}

func (o *GetEpisodeBadRequest) String() string {
	return fmt.Sprintf("[GET /channels/{channelId}/episodes/{id}][%d] getEpisodeBadRequest  %+v", 400, o.Payload)
}

func (o *GetEpisodeBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEpisodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEpisodeNotFound creates a GetEpisodeNotFound with default headers values
func NewGetEpisodeNotFound() *GetEpisodeNotFound {
	return &GetEpisodeNotFound{}
}

/*
GetEpisodeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEpisodeNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get episode not found response has a 2xx status code
func (o *GetEpisodeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get episode not found response has a 3xx status code
func (o *GetEpisodeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get episode not found response has a 4xx status code
func (o *GetEpisodeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get episode not found response has a 5xx status code
func (o *GetEpisodeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get episode not found response a status code equal to that given
func (o *GetEpisodeNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetEpisodeNotFound) Error() string {
	return fmt.Sprintf("[GET /channels/{channelId}/episodes/{id}][%d] getEpisodeNotFound  %+v", 404, o.Payload)
}

func (o *GetEpisodeNotFound) String() string {
	return fmt.Sprintf("[GET /channels/{channelId}/episodes/{id}][%d] getEpisodeNotFound  %+v", 404, o.Payload)
}

func (o *GetEpisodeNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEpisodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEpisodeInternalServerError creates a GetEpisodeInternalServerError with default headers values
func NewGetEpisodeInternalServerError() *GetEpisodeInternalServerError {
	return &GetEpisodeInternalServerError{}
}

/*
GetEpisodeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetEpisodeInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get episode internal server error response has a 2xx status code
func (o *GetEpisodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get episode internal server error response has a 3xx status code
func (o *GetEpisodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get episode internal server error response has a 4xx status code
func (o *GetEpisodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get episode internal server error response has a 5xx status code
func (o *GetEpisodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get episode internal server error response a status code equal to that given
func (o *GetEpisodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetEpisodeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /channels/{channelId}/episodes/{id}][%d] getEpisodeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEpisodeInternalServerError) String() string {
	return fmt.Sprintf("[GET /channels/{channelId}/episodes/{id}][%d] getEpisodeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEpisodeInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEpisodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
