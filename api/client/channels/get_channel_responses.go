// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mkuznets.com/go/sps/api/models"
)

// GetChannelReader is a Reader for the GetChannel structure.
type GetChannelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChannelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChannelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetChannelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChannelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChannelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetChannelOK creates a GetChannelOK with default headers values
func NewGetChannelOK() *GetChannelOK {
	return &GetChannelOK{}
}

/*
GetChannelOK describes a response with status code 200, with default header values.

OK
*/
type GetChannelOK struct {
	Payload *models.ChannelResponse
}

// IsSuccess returns true when this get channel o k response has a 2xx status code
func (o *GetChannelOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get channel o k response has a 3xx status code
func (o *GetChannelOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get channel o k response has a 4xx status code
func (o *GetChannelOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get channel o k response has a 5xx status code
func (o *GetChannelOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get channel o k response a status code equal to that given
func (o *GetChannelOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetChannelOK) Error() string {
	return fmt.Sprintf("[GET /channels/{id}][%d] getChannelOK  %+v", 200, o.Payload)
}

func (o *GetChannelOK) String() string {
	return fmt.Sprintf("[GET /channels/{id}][%d] getChannelOK  %+v", 200, o.Payload)
}

func (o *GetChannelOK) GetPayload() *models.ChannelResponse {
	return o.Payload
}

func (o *GetChannelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChannelResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChannelBadRequest creates a GetChannelBadRequest with default headers values
func NewGetChannelBadRequest() *GetChannelBadRequest {
	return &GetChannelBadRequest{}
}

/*
GetChannelBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetChannelBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get channel bad request response has a 2xx status code
func (o *GetChannelBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get channel bad request response has a 3xx status code
func (o *GetChannelBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get channel bad request response has a 4xx status code
func (o *GetChannelBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get channel bad request response has a 5xx status code
func (o *GetChannelBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get channel bad request response a status code equal to that given
func (o *GetChannelBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetChannelBadRequest) Error() string {
	return fmt.Sprintf("[GET /channels/{id}][%d] getChannelBadRequest  %+v", 400, o.Payload)
}

func (o *GetChannelBadRequest) String() string {
	return fmt.Sprintf("[GET /channels/{id}][%d] getChannelBadRequest  %+v", 400, o.Payload)
}

func (o *GetChannelBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetChannelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChannelNotFound creates a GetChannelNotFound with default headers values
func NewGetChannelNotFound() *GetChannelNotFound {
	return &GetChannelNotFound{}
}

/*
GetChannelNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetChannelNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get channel not found response has a 2xx status code
func (o *GetChannelNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get channel not found response has a 3xx status code
func (o *GetChannelNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get channel not found response has a 4xx status code
func (o *GetChannelNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get channel not found response has a 5xx status code
func (o *GetChannelNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get channel not found response a status code equal to that given
func (o *GetChannelNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetChannelNotFound) Error() string {
	return fmt.Sprintf("[GET /channels/{id}][%d] getChannelNotFound  %+v", 404, o.Payload)
}

func (o *GetChannelNotFound) String() string {
	return fmt.Sprintf("[GET /channels/{id}][%d] getChannelNotFound  %+v", 404, o.Payload)
}

func (o *GetChannelNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetChannelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChannelInternalServerError creates a GetChannelInternalServerError with default headers values
func NewGetChannelInternalServerError() *GetChannelInternalServerError {
	return &GetChannelInternalServerError{}
}

/*
GetChannelInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetChannelInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get channel internal server error response has a 2xx status code
func (o *GetChannelInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get channel internal server error response has a 3xx status code
func (o *GetChannelInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get channel internal server error response has a 4xx status code
func (o *GetChannelInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get channel internal server error response has a 5xx status code
func (o *GetChannelInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get channel internal server error response a status code equal to that given
func (o *GetChannelInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetChannelInternalServerError) Error() string {
	return fmt.Sprintf("[GET /channels/{id}][%d] getChannelInternalServerError  %+v", 500, o.Payload)
}

func (o *GetChannelInternalServerError) String() string {
	return fmt.Sprintf("[GET /channels/{id}][%d] getChannelInternalServerError  %+v", 500, o.Payload)
}

func (o *GetChannelInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetChannelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
