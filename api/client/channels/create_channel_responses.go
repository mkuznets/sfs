// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"mkuznets.com/go/sps/api/models"
)

// CreateChannelReader is a Reader for the CreateChannel structure.
type CreateChannelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateChannelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateChannelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateChannelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateChannelUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateChannelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateChannelOK creates a CreateChannelOK with default headers values
func NewCreateChannelOK() *CreateChannelOK {
	return &CreateChannelOK{}
}

/*
CreateChannelOK describes a response with status code 200, with default header values.

OK
*/
type CreateChannelOK struct {
	Payload *models.IDResponse
}

// IsSuccess returns true when this create channel o k response has a 2xx status code
func (o *CreateChannelOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create channel o k response has a 3xx status code
func (o *CreateChannelOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create channel o k response has a 4xx status code
func (o *CreateChannelOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create channel o k response has a 5xx status code
func (o *CreateChannelOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create channel o k response a status code equal to that given
func (o *CreateChannelOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateChannelOK) Error() string {
	return fmt.Sprintf("[POST /channels][%d] createChannelOK  %+v", 200, o.Payload)
}

func (o *CreateChannelOK) String() string {
	return fmt.Sprintf("[POST /channels][%d] createChannelOK  %+v", 200, o.Payload)
}

func (o *CreateChannelOK) GetPayload() *models.IDResponse {
	return o.Payload
}

func (o *CreateChannelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChannelBadRequest creates a CreateChannelBadRequest with default headers values
func NewCreateChannelBadRequest() *CreateChannelBadRequest {
	return &CreateChannelBadRequest{}
}

/*
CreateChannelBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateChannelBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create channel bad request response has a 2xx status code
func (o *CreateChannelBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create channel bad request response has a 3xx status code
func (o *CreateChannelBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create channel bad request response has a 4xx status code
func (o *CreateChannelBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create channel bad request response has a 5xx status code
func (o *CreateChannelBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create channel bad request response a status code equal to that given
func (o *CreateChannelBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateChannelBadRequest) Error() string {
	return fmt.Sprintf("[POST /channels][%d] createChannelBadRequest  %+v", 400, o.Payload)
}

func (o *CreateChannelBadRequest) String() string {
	return fmt.Sprintf("[POST /channels][%d] createChannelBadRequest  %+v", 400, o.Payload)
}

func (o *CreateChannelBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateChannelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChannelUnauthorized creates a CreateChannelUnauthorized with default headers values
func NewCreateChannelUnauthorized() *CreateChannelUnauthorized {
	return &CreateChannelUnauthorized{}
}

/*
CreateChannelUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateChannelUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create channel unauthorized response has a 2xx status code
func (o *CreateChannelUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create channel unauthorized response has a 3xx status code
func (o *CreateChannelUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create channel unauthorized response has a 4xx status code
func (o *CreateChannelUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create channel unauthorized response has a 5xx status code
func (o *CreateChannelUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create channel unauthorized response a status code equal to that given
func (o *CreateChannelUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateChannelUnauthorized) Error() string {
	return fmt.Sprintf("[POST /channels][%d] createChannelUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateChannelUnauthorized) String() string {
	return fmt.Sprintf("[POST /channels][%d] createChannelUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateChannelUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateChannelUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChannelInternalServerError creates a CreateChannelInternalServerError with default headers values
func NewCreateChannelInternalServerError() *CreateChannelInternalServerError {
	return &CreateChannelInternalServerError{}
}

/*
CreateChannelInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateChannelInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create channel internal server error response has a 2xx status code
func (o *CreateChannelInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create channel internal server error response has a 3xx status code
func (o *CreateChannelInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create channel internal server error response has a 4xx status code
func (o *CreateChannelInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create channel internal server error response has a 5xx status code
func (o *CreateChannelInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create channel internal server error response a status code equal to that given
func (o *CreateChannelInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateChannelInternalServerError) Error() string {
	return fmt.Sprintf("[POST /channels][%d] createChannelInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateChannelInternalServerError) String() string {
	return fmt.Sprintf("[POST /channels][%d] createChannelInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateChannelInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateChannelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
